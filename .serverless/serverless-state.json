{
  "service": {
    "service": "serverless-dynamodb-service",
    "serviceObject": {
      "name": "serverless-dynamodb-service"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "memorySize": 128,
      "timeout": 10,
      "environment": {
        "USERS_TABLE": "user",
        "JWT_SECRET": "Dadd2425eb63a9930def665b15d7057c1980666c69b5f853c410a76b7615c01a"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/user"
        }
      ],
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "*"
          ],
          "allowedHeaders": [
            "*"
          ],
          "allowedMethods": [
            "*"
          ],
          "allowCredentials": false,
          "maxAge": 2
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "LoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-dynamodb-service-dev-login"
            }
          },
          "RegisterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-dynamodb-service-dev-register"
            }
          },
          "UpdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-dynamodb-service-dev-update"
            }
          },
          "DeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-dynamodb-service-dev-delete"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-dynamodb-service",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-dynamodb-service-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-dynamodb-service-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-dynamodb-service",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "LoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-62905b8c-ed4a",
                "S3Key": "serverless/serverless-dynamodb-service/dev/1736129850777-2025-01-06T02:17:30.777Z/login.zip"
              },
              "Handler": "login.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-dynamodb-service-dev-login",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "user",
                  "JWT_SECRET": "Dadd2425eb63a9930def665b15d7057c1980666c69b5f853c410a76b7615c01a"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LoginLogGroup"
            ]
          },
          "RegisterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-62905b8c-ed4a",
                "S3Key": "serverless/serverless-dynamodb-service/dev/1736129850777-2025-01-06T02:17:30.777Z/register.zip"
              },
              "Handler": "register.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-dynamodb-service-dev-register",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "user",
                  "JWT_SECRET": "Dadd2425eb63a9930def665b15d7057c1980666c69b5f853c410a76b7615c01a"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "RegisterLogGroup"
            ]
          },
          "UpdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-62905b8c-ed4a",
                "S3Key": "serverless/serverless-dynamodb-service/dev/1736129850777-2025-01-06T02:17:30.777Z/update.zip"
              },
              "Handler": "updateUser.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-dynamodb-service-dev-update",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "user",
                  "JWT_SECRET": "Dadd2425eb63a9930def665b15d7057c1980666c69b5f853c410a76b7615c01a"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateLogGroup"
            ]
          },
          "DeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-62905b8c-ed4a",
                "S3Key": "serverless/serverless-dynamodb-service/dev/1736129850777-2025-01-06T02:17:30.777Z/delete.zip"
              },
              "Handler": "deleteUser.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-dynamodb-service-dev-delete",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "USERS_TABLE": "user",
                  "JWT_SECRET": "Dadd2425eb63a9930def665b15d7057c1980666c69b5f853c410a76b7615c01a"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteLogGroup"
            ]
          },
          "LoginLambdaVersionoKFw7iqcXN6IQPpGtpBH2SGIXUdBVXCfhb3xWy3hP5I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LoginLambdaFunction"
              },
              "CodeSha256": "Hmxvjhnqsgf9PQdVJlnL3xKMHWMRGQRcLkm7MBGBN7g="
            }
          },
          "UpdateLambdaVersionOCzDMd7oNWW5MZbHlKfjKHkQug93hDkJ6fKVKg8dVK4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateLambdaFunction"
              },
              "CodeSha256": "Hmxvjhnqsgf9PQdVJlnL3xKMHWMRGQRcLkm7MBGBN7g="
            }
          },
          "DeleteLambdaVersionz2KFoXt2wa0xwFhjiba98wonf0n0OFKRg5GZjuz8lCk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteLambdaFunction"
              },
              "CodeSha256": "Hmxvjhnqsgf9PQdVJlnL3xKMHWMRGQRcLkm7MBGBN7g="
            }
          },
          "RegisterLambdaVersionuyfCRwyysLXS3O4lWSREhBpXe8Y5CuPkldDfbY9Sm9A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegisterLambdaFunction"
              },
              "CodeSha256": "Hmxvjhnqsgf9PQdVJlnL3xKMHWMRGQRcLkm7MBGBN7g="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-dynamodb-service",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "user",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "login",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUserEmailVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "{email}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUserLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserLogin"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RegisterLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RegisterLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUserEmailVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserEmailVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1736129828348": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUserLoginPost",
              "ApiGatewayMethodUserPost",
              "ApiGatewayMethodUserPut",
              "ApiGatewayMethodUserEmailVarDelete"
            ]
          },
          "LoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RegisterLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RegisterLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "user",
              "AttributeDefinitions": [
                {
                  "AttributeName": "email",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "email",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-62905b8c-ed4a",
            "Export": {
              "Name": "sls-serverless-dynamodb-service-dev-ServerlessDeploymentBucketName"
            }
          },
          "LoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LoginLambdaVersionoKFw7iqcXN6IQPpGtpBH2SGIXUdBVXCfhb3xWy3hP5I"
            },
            "Export": {
              "Name": "sls-serverless-dynamodb-service-dev-LoginLambdaFunctionQualifiedArn"
            }
          },
          "UpdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateLambdaVersionOCzDMd7oNWW5MZbHlKfjKHkQug93hDkJ6fKVKg8dVK4"
            },
            "Export": {
              "Name": "sls-serverless-dynamodb-service-dev-UpdateLambdaFunctionQualifiedArn"
            }
          },
          "DeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteLambdaVersionz2KFoXt2wa0xwFhjiba98wonf0n0OFKRg5GZjuz8lCk"
            },
            "Export": {
              "Name": "sls-serverless-dynamodb-service-dev-DeleteLambdaFunctionQualifiedArn"
            }
          },
          "RegisterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegisterLambdaVersionuyfCRwyysLXS3O4lWSREhBpXe8Y5CuPkldDfbY9Sm9A"
            },
            "Export": {
              "Name": "sls-serverless-dynamodb-service-dev-RegisterLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-dynamodb-service-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "serverless-offline": {
        "httpPort": 4000
      }
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "login": {
        "handler": "login.handler",
        "timeout": 10,
        "events": [
          {
            "http": {
              "path": "user/login",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-dynamodb-service-dev-login",
        "package": {
          "artifact": ".serverless\\login.zip"
        },
        "memory": 128,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "LoginLambdaVersionoKFw7iqcXN6IQPpGtpBH2SGIXUdBVXCfhb3xWy3hP5I"
      },
      "register": {
        "handler": "register.handler",
        "timeout": 10,
        "events": [
          {
            "http": {
              "path": "user",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-dynamodb-service-dev-register",
        "package": {
          "artifact": ".serverless\\register.zip"
        },
        "memory": 128,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "RegisterLambdaVersionuyfCRwyysLXS3O4lWSREhBpXe8Y5CuPkldDfbY9Sm9A"
      },
      "update": {
        "handler": "updateUser.handler",
        "timeout": 10,
        "events": [
          {
            "http": {
              "path": "user",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-dynamodb-service-dev-update",
        "package": {
          "artifact": ".serverless\\update.zip"
        },
        "memory": 128,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UpdateLambdaVersionOCzDMd7oNWW5MZbHlKfjKHkQug93hDkJ6fKVKg8dVK4"
      },
      "delete": {
        "handler": "deleteUser.handler",
        "timeout": 10,
        "events": [
          {
            "http": {
              "path": "user/{email}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-dynamodb-service-dev-delete",
        "package": {
          "artifact": ".serverless\\delete.zip"
        },
        "memory": 128,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "DeleteLambdaVersionz2KFoXt2wa0xwFhjiba98wonf0n0OFKRg5GZjuz8lCk"
      }
    },
    "resources": {
      "Resources": {
        "UsersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "user",
            "AttributeDefinitions": [
              {
                "AttributeName": "email",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "email",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "serverless-dynamodb-service",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "individually": true,
        "include": [
          "node_modules/**",
          "handler.js"
        ],
        "artifactsS3KeyDirname": "serverless/serverless-dynamodb-service/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-62905b8c-ed4a",
        "artifactDirectoryName": "serverless/serverless-dynamodb-service/dev/1736129850777-2025-01-06T02:17:30.777Z"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "appId": null,
    "orgId": null,
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/serverless-dynamodb-service/dev/1736129850777-2025-01-06T02:17:30.777Z",
    "artifact": ""
  }
}